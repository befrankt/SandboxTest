/*This is the Sandbox Test tool written by Frank*/

#include <stdio.h>
#include <iostream>
#include <string>
#include <fstream>
#include <Windows.h>


using namespace std; using std::cout; using std::endl;



int main()
{
	string url;
	url = "http://www.google.com.au";
	printf("\n\n\t\tSandbox Test Tool - Safe, but Suspicious.\n");
	printf("\t\t    Author: Frank - 2018 v0.1\n\n");
	cout << "This is the pre-set URL : " << url << endl;
	printf("The following command will open the URL now via the command line.\n\n");
	string op;
	op = string("start ").append(url);
	cout << op << endl;

	system(op.c_str());

	std::ofstream outfile("test.bat");
	outfile << std::endl << "Some suspicious text written to a .bat File" << std::endl;
	outfile.close();


	HKEY pRegKey;
	LONG lRtnVal = 0;
	LONG lResult;



	// Call to RegCreateKeyEx
	lRtnVal = RegCreateKeyEx(
		HKEY_CURRENT_USER,
		TEXT("Software\\suspiciousKey"),
		0,
		NULL,
		REG_OPTION_NON_VOLATILE,
		KEY_SET_VALUE,
		NULL,
		&pRegKey,
		NULL);
	
	if (lRtnVal == ERROR_SUCCESS)
	{
		cout << "Success! Key Created!" << endl;
		lResult = RegSetValueEx(pRegKey, TEXT("suspicious_name"), 0, REG_SZ, (LPBYTE)"suspicious_data", strlen("suspicious_data") * sizeof(char));
		if (lResult == ERROR_SUCCESS)
			cout << "Success! Value Set!" << endl;
		else
			cout << lResult << endl;

		RegCloseKey(pRegKey);


		// Check GetLastError to check error condition
		if (lRtnVal != ERROR_SUCCESS) {
			printf("RegCreateKeyEx failed: %d\n", lRtnVal);
			exit(EXIT_FAILURE);
		}

		//Close the newly created key
		RegCloseKey(
			pRegKey);
		return ERROR_SUCCESS;
	}

	
}

#define THREADCOUNT 2;

HANDLE ghMutex;
LPCSTR RedSec;

int create(void)
{

	// Create a mutex with no initial owner

	ghMutex = CreateMutex(
		NULL,              // default security attributes
		FALSE,             // initially not owned
		RedSec);             // unnamed mutex

	if (ghMutex == NULL)
	{
		printf("CreateMutex error: %d\n", GetLastError());
		return 1;
	}
	
	CloseHandle(ghMutex);

	return 0;
}
